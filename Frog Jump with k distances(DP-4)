class Solution {
  public:
    int minimizeCost(vector<int>& height, int& k) {
         int n = height.size();
        if (n == 0 || n == 1) return 0;

        vector<int> dp(n, INT_MAX);
        dp[0] = 0;

        for (int i = 1; i < n; ++i) {
            for (int m = 1; m <= k; ++m) {
                if (i - m >= 0) {
                    dp[i] = min(dp[i], dp[i - m] + abs(height[i] - height[i - m]));
                }
            }
        }
        return dp[n - 1];
    }
};
