class Solution {
public:
    int rob(vector<int>& nums) {
        int n =nums.size();
        if(n==1) return nums[0];
        vector<int> temp1;
        vector<int> temp2;
        for(int i=0;i<n;i++){
            if(i!=0) temp1.push_back(nums[i]);
            if(i!=n-1) temp2.push_back(nums[i]);
        }
        return max(r(temp1),r(temp2));
    }

    int r(vector<int>& nums) {
        int n =nums.size();
        if(n==0) return 0;
        if(n==1) return nums[0];
        vector<int> dp(n,0);
        dp[0]=nums[0];
        
        for (int i = 1; i < nums.size(); i++) {
            int pick =nums[i];
            if (i > 1)
                    pick =nums[i] +dp[i - 2];
             dp[i]=max(dp[i-1],pick);
             
        }
        return dp[n-1];
    
    }
};
